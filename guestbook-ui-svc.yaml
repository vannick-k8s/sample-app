apiVersion: v1
kind: Service
metadata:
  name: guestbook-ui
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: guestbook-ui
---
apiVersion: v1
kind: Service
metadata:
  name: guestbook-ui-external
spec:
  type: LoadBalancer    # Target pool-based external passthrough Network Load Balancer by omitting the cloud.google.com/l4-rbs: "enabled" annotation.
  ports:
  - port: 8080
    targetPort: 80
  selector:
    app: guestbook-ui
---
apiVersion: v1
kind: Service
metadata:
  name: guestbook-ui-external-rbs
  annotations:
    cloud.google.com/l4-rbs: "enabled"     #  Backend service-based external passthrough Network Load Balancer by including cloud.google.com/l4-rbs: "enabled" 
spec:
  type: LoadBalancer
  ports:
  - port: 8080
    targetPort: 80
  selector:
    app: guestbook-ui
---
apiVersion: v1
kind: Service
metadata:
  name: guestbook-ui-neg
  annotations:
    cloud.google.com/neg: '{"exposed_ports": {"80":{"name": "guestbook-ui-neg"}}}'
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: guestbook-ui-neg
---
apiVersion: v1
kind: Service
metadata:
  name: guestbook-ui-internal
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
    networking.gke.io/internal-load-balancer-subnet: "ilb-subnet"    # Force to create ILB in dedicated subnet
spec:
  type: LoadBalancer    # Internal ILB with IP in a dedicated subnet
  ports:
  - port: 8080
    targetPort: 80
  selector:
    app: guestbook-ui
